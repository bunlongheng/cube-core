cubes:
  - name: appointments
    sql_table: METRICS.APPOINTMENTS
    data_source: default

    joins: []

    dimensions:
      - name: id
        sql: "{CUBE}.\"ID\""
        type: string
        primary_key: true

      - name: metric_name
        sql: "{CUBE}.\"METRIC_NAME\""
        type: string

      - name: is_recurring
        sql: "{CUBE}.\"IS_RECURRING\""
        type: boolean

      - name: price
        sql: "{CUBE}.\"PRICE\""
        type: string

      - name: customer_status
        sql: "{CUBE}.\"CUSTOMER_STATUS\""
        type: string

      - name: service_id
        sql: "{CUBE}.\"SERVICE_ID\""
        type: string

      - name: client_id
        sql: "{CUBE}.\"CLIENT_ID\""
        type: string

      - name: additional_cat_3
        sql: "{CUBE}.\"ADDITIONAL_CAT_3\""
        type: string

      - name: filter_1_name
        sql: "{CUBE}.\"FILTER_1_NAME\""
        type: string

      - name: additional_cat_3_name
        sql: "{CUBE}.\"ADDITIONAL_CAT_3_NAME\""
        type: string

      - name: additional_cat_2
        sql: "{CUBE}.\"ADDITIONAL_CAT_2\""
        type: string

      - name: business_uid
        sql: "{CUBE}.\"BUSINESS_UID\""
        type: string

      - name: staff_role
        sql: "{CUBE}.\"STAFF_ROLE\""
        type: string

      - name: filter_3_name
        sql: "{CUBE}.\"FILTER_3_NAME\""
        type: string

      - name: interaction_type
        sql: "{CUBE}.\"INTERACTION_TYPE\""
        type: string

      - name: staff_name
        sql: "{CUBE}.\"STAFF_NAME\""
        type: string

      - name: filter_3_value
        sql: "{CUBE}.\"FILTER_3_VALUE\""
        type: string

      - name: series_id
        sql: "{CUBE}.\"SERIES_ID\""
        type: string

      - name: source_data_name
        sql: "{CUBE}.\"SOURCE_DATA_NAME\""
        type: string

      - name: value_1_name
        sql: "{CUBE}.\"VALUE_1_NAME\""
        type: string

      - name: additional_cat_4_name
        sql: "{CUBE}.\"ADDITIONAL_CAT_4_NAME\""
        type: string

      - name: business_time_zone
        sql: "{CUBE}.\"BUSINESS_TIME_ZONE\""
        type: string

      - name: frequency_group
        sql: "{CUBE}.\"FREQUENCY_GROUP\""
        type: string

      - name: filter_2_name
        sql: "{CUBE}.\"FILTER_2_NAME\""
        type: string

      - name: status
        sql: "{CUBE}.\"STATUS\""
        type: string

      - name: type
        sql: "{CUBE}.\"TYPE\""
        type: string

      - name: additional_cat_2_name
        sql: "{CUBE}.\"ADDITIONAL_CAT_2_NAME\""
        type: string

      - name: additional_cat_1
        sql: "{CUBE}.\"ADDITIONAL_CAT_1\""
        type: string

      - name: filter_2_value
        sql: "{CUBE}.\"FILTER_2_VALUE\""
        type: string

      - name: additional_cat_1_name
        sql: "{CUBE}.\"ADDITIONAL_CAT_1_NAME\""
        type: string

      - name: staff_id
        sql: "{CUBE}.\"STAFF_ID\""
        type: string

      - name: value_2_name
        sql: "{CUBE}.\"VALUE_2_NAME\""
        type: string

      - name: filter_1_value
        sql: "{CUBE}.\"FILTER_1_VALUE\""
        type: string

      - name: customer_type
        sql: "{CUBE}.\"CUSTOMER_TYPE\""
        type: string

      - name: additional_cat_4
        sql: "{CUBE}.\"ADDITIONAL_CAT_4\""
        type: string

      - name: state
        sql: "{CUBE}.\"STATE\""
        type: string

      - name: created_at
        sql: "{CUBE}.\"CREATED_AT\""
        type: time

      - name: updated_at
        sql: "{CUBE}.\"UPDATED_AT\""
        type: time

      - name: date
        sql: "{CUBE}.\"Date\""
        type: time
      
      - name: week_Monday
        sql: "DATE_TRUNC('week',{CUBE}.\"Date\")"
        type: time

    segments:
      - name: one_one_appointment
        sql: "{CUBE}.\"TYPE\" = 'Appointment'"

      
    measures:
      - name: count
        sql: "{CUBE}.ID"
        type: count

      - name: revenue
        sql: "{CUBE}.PRICE"
        type: sum

      - name: duration
        sql: "{CUBE}.DURATION"
        type: sum

    pre_aggregations: 
      # Pre-aggregation definitions go here.
      # Learn more in the documentation: https://cube.dev/docs/caching/pre-aggregations/getting-started
      - name: appointments_by_status_daily
        type: rollup
        measures: [count]
        dimensions: [status]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour

      - name: appointments_by_status_filters
        type: rollup
        measures: [count]
        dimensions: [status, customer_status, staff_name]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour

      - name: appointments_by_status_weekly
        type: rollup
        measures: [count]
        dimensions: [status]
        segments: [one_one_appointment]
        time_dimension: week_Monday
        granularity: week
        partition_granularity: week
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour
      

      - name: appointments_by_status_monthly
        type: rollup
        measures: [count]
        dimensions: [status]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: month
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour


      - name: appointments_by_status_table
        type: rollup
        measures: [count, revenue]
        dimensions: [status]
        segments: [one_one_appointment]
        #time_dimension: date
        #granularity: day
        #partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour


      - name: appointments_per_staff_daily
        type: rollup
        measures: [count, revenue]
        dimensions: [staff_name]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour


      - name: appointments_customer_types_daily
        type: rollup
        measures: [count]
        dimensions: [customer_status]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour


      - name: appointments_by_type_daily
        type: rollup
        measures: [count, revenue]
        dimensions: [type]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour
      

      - name: cancelled_appointments_daily
        type: rollup
        measures: [count]
        dimensions: [status]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour


      - name: rescheduled_appointments_daily
        type: rollup
        measures: [count]
        dimensions: [status]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour

      - name: recurring_appointments_daily
        type: rollup
        measures: [count]
        dimensions: [frequency_group]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour
      
      - name: completed_appointments_daily
        type: rollup
        measures: [count]
        dimensions: [status]
        segments: [one_one_appointment]
        time_dimension: date
        granularity: day
        partition_granularity: day
        build_range_start: 
          sql: "SELECT TIMESTAMP('2022-01-01')"
        refresh_key:
            every: 1 hour
